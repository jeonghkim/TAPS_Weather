# clean the data, narrowing down the stations

setwd("~/Dropbox/NOAAoriginal/datafile")
dec2013 <- read.csv("Actual2013dec.csv")
dec2013$STATION_NAME <- dec2013$ELEVATION <- NULL
dec2013$TMAX[dec2013$TMAX==-9999] <- NA
dec2013$TMIN[dec2013$TMIN==-9999] <- NA
dec2013$PRCP[dec2013$PRCP==-9999] <- NA
dec2013 <- dec2013[complete.cases(dec2013),]
library(plyr)
duplicate <- ddply(dec2013, .(STATION), nrow)
dupli <- subset(duplicate, duplicate$V1==31)

nov2013 <- read.csv("Actual2013nov.csv")
nov2013$STATION_NAME <- nov2013$ELEVATION <- NULL
nov2013$TMAX[nov2013$TMAX==-9999] <- NA
nov2013$TMIN[nov2013$TMIN==-9999] <- NA
nov2013$PRCP[nov2013$PRCP==-9999] <- NA
nov2013 <- nov2013[complete.cases(nov2013),]
duplicate <- ddply(nov2013, .(STATION), nrow)
dupli2 <- subset(duplicate, duplicate$V1==30)

in1 <- dupli[which(dupli$STATION %in% dupli2$STATION),]

oct2013 <- read.csv("Actual2013oct.csv")
oct2013$STATION_NAME <- oct2013$ELEVATION<- NULL
oct2013$TMAX[oct2013$TMAX==-9999] <- NA
oct2013$TMIN[oct2013$TMIN==-9999] <- NA
nov2013$PRCP[nov2013$PRCP==-9999] <- NA
oct2013 <- oct2013[complete.cases(oct2013),]
duplicate <- ddply(oct2013, .(STATION), nrow)
dupli3 <- subset(duplicate, duplicate$V1==31)

in2 <- in1[which(in1$STATION %in% dupli3$STATION),]

sep2013 <- read.csv("Actual2013sep.csv")
sep2013$STATION_NAME <- sep2013$ELEVATION <- NULL
sep2013$TMAX[sep2013$TMAX==-9999] <- NA
sep2013$TMIN[sep2013$TMIN==-9999] <- NA
sep2013$PRCP[sep2013$PRCP==-9999] <- NA
sep2013 <- sep2013[complete.cases(sep2013),]
duplicate <- ddply(sep2013, .(STATION), nrow)
dupli4 <- subset(duplicate, duplicate$V1==30)

in3 <- in2[which(in2$STATION %in% dupli4$STATION),]

april2014 <- read.csv("Actual2014april.csv")
april2014$STATION_NAME <- april2014$ELEVATION <- NULL
april2014$TMAX[april2014$TMAX==-9999] <- NA
april2014$TMIN[april2014$TMIN==-9999] <- NA
april2014$PRCP[april2014$PRCP==-9999] <- NA
april2014 <- april2014[complete.cases(april2014),]
duplicate <- ddply(april2014, .(STATION), nrow)
dupli5 <- subset(duplicate, duplicate$V1==30)

in4 <- in3[which(in3$STATION %in% dupli5$STATION),]

aug2014 <- read.csv("Actual2014aug.csv")
aug2014$STATION_NAME <- aug2014$ELEVATION<- NULL
aug2014$TMAX[aug2014$TMAX==-9999] <- NA
aug2014$TMIN[aug2014$TMIN==-9999] <- NA
aug2014$PRCP[aug2014$PRCP==-9999] <- NA
aug2014 <- aug2014[complete.cases(aug2014),]
duplicate <- ddply(aug2014, .(STATION), nrow)
dupli6 <- subset(duplicate, duplicate$V1==31)

in5 <- in4[which(in4$STATION %in% dupli6$STATION),]

dec2014 <- read.csv("Actual2014dec.csv")
dec2014$STATION_NAME <- dec2014$ELEVATION<- NULL
dec2014$TMAX[dec2014$TMAX==-9999] <- NA
dec2014$TMIN[dec2014$TMIN==-9999] <- NA
dec2014$PRCP[dec2014$PRCP==-9999] <- NA
dec2014 <- dec2014[complete.cases(dec2014),]
duplicate <- ddply(dec2014, .(STATION), nrow)
dupli7 <- subset(duplicate, duplicate$V1==31)

in6 <- in5[which(in5$STATION %in% dupli7$STATION),]

feb2014 <- read.csv("Actual2014feb.csv")
feb2014$STATION_NAME <- feb2014$ELEVATION<- NULL
feb2014$TMAX[feb2014$TMAX==-9999] <- NA
feb2014$TMIN[feb2014$TMIN==-9999] <- NA
feb2014$PRCP[feb2014$PRCP==-9999] <- NA
feb2014 <- feb2014[complete.cases(feb2014),]
duplicate <- ddply(feb2014, .(STATION), nrow)
dupli8 <- subset(duplicate, duplicate$V1==28)

in7 <- in6[which(in6$STATION %in% dupli8$STATION),]

jan2014 <- read.csv("Actual2014jan.csv")
jan2014$STATION_NAME <- jan2014$ELEVATION <- NULL
jan2014$TMAX[jan2014$TMAX==-9999] <- NA
jan2014$TMIN[jan2014$TMIN==-9999] <- NA
jan2014$PRCP[jan2014$PRCP==-9999] <- NA
jan2014 <- jan2014[complete.cases(jan2014),]
duplicate <- ddply(jan2014, .(STATION), nrow)
dupli9 <- subset(duplicate, duplicate$V1==31)

in8 <- in7[which(in7$STATION %in% dupli9$STATION),]

july2014 <- read.csv("Actual2014july.csv")
july2014$STATION_NAME <- july2014$ELEVATION<- NULL
july2014$TMAX[july2014$TMAX==-9999] <- NA
july2014$TMIN[july2014$TMIN==-9999] <- NA
july2014$PRCP[july2014$PRCP==-9999] <- NA
july2014 <- july2014[complete.cases(july2014),]
duplicate <- ddply(july2014, .(STATION), nrow)
dupli10 <- subset(duplicate, duplicate$V1==31)

in9 <- in8[which(in8$STATION %in% dupli10$STATION),]

june2014 <- read.csv("Actual2014june.csv")
june2014$STATION_NAME <- june2014$ELEVATION<- NULL
june2014$TMAX[june2014$TMAX==-9999] <- NA
june2014$TMIN[june2014$TMIN==-9999] <- NA
june2014$PRCP[june2014$PRCP==-9999] <- NA
june2014 <- june2014[complete.cases(june2014),]
duplicate <- ddply(june2014, .(STATION), nrow)
dupli11 <- subset(duplicate, duplicate$V1==30)

in10 <- in9[which(in9$STATION %in% dupli11$STATION),]

march2014 <- read.csv("Actual2014march.csv")
march2014$STATION_NAME <- march2014$ELEVATION<- NULL
march2014$TMAX[march2014$TMAX==-9999] <- NA
march2014$TMIN[march2014$TMIN==-9999] <- NA
march2014$PRCP[march2014$PRCP==-9999] <- NA
march2014 <- march2014[complete.cases(march2014),]
duplicate <- ddply(march2014, .(STATION), nrow)
dupli12 <- subset(duplicate, duplicate$V1==31)

in11 <- in10[which(in10$STATION %in% dupli12$STATION),]

may2014 <- read.csv("Actual2014may.csv")
may2014$STATION_NAME <- may2014$ELEVATION<- NULL
may2014$TMAX[may2014$TMAX==-9999] <- NA
may2014$TMIN[may2014$TMIN==-9999] <- NA
may2014$PRCP[may2014$PRCP==-9999] <- NA
may2014 <- may2014[complete.cases(may2014),]
duplicate <- ddply(may2014, .(STATION), nrow)
dupli13 <- subset(duplicate, duplicate$V1==31)

in12 <- in11[which(in11$STATION %in% dupli13$STATION),]

nov2014 <- read.csv("Actual2014nov.csv")
nov2014$STATION_NAME <- nov2014$ELEVATION<- NULL
nov2014$TMAX[nov2014$TMAX==-9999] <- NA
nov2014$TMIN[nov2014$TMIN==-9999] <- NA
nov2014$PRCP[nov2014$PRCP==-9999] <- NA
nov2014 <- nov2014[complete.cases(nov2014),]
duplicate <- ddply(nov2014, .(STATION), nrow)
dupli14 <- subset(duplicate, duplicate$V1==30)

in13 <- in12[which(in12$STATION %in% dupli14$STATION),]

oct2014 <- read.csv("Actual2014oct.csv")
oct2014$STATION_NAME <- oct2014$ELEVATION <- NULL
oct2014$TMAX[oct2014$TMAX==-9999] <- NA
oct2014$TMIN[oct2014$TMIN==-9999] <- NA
oct2014$PRCP[oct2014$PRCP==-9999] <- NA
oct2014 <- oct2014[complete.cases(oct2014),]
duplicate <- ddply(oct2014, .(STATION), nrow)
dupli15 <- subset(duplicate, duplicate$V1==31)

in14 <- in13[which(in13$STATION %in% dupli15$STATION),]

sep2014 <- read.csv("Actual2014sep.csv")
sep2014$STATION_NAME <- sep2014$ELEVATION<- NULL
sep2014$TMAX[sep2014$TMAX==-9999] <- NA
sep2014$TMIN[sep2014$TMIN==-9999] <- NA
sep2014$PRCP[sep2014$PRCP==-9999] <- NA
sep2014 <- sep2014[complete.cases(sep2014),]
duplicate <- ddply(sep2014, .(STATION), nrow)
dupli16 <- subset(duplicate, duplicate$V1==30)

in15 <- in14[which(in14$STATION %in% dupli16$STATION),]

hist123 <- read.csv("Historical_123.csv")
hist123$STATION_NAME <- hist123$ELEVATION <- NULL
hist123$MTD.PRCP.NORMAL <- hist123$MTD.SNOW.NORMAL <- hist123$DLY.TAVG.STDDEV <- NULL
hist123$YTD.PRCP.NORMAL <- hist123$YTD.SNOW.NORMAL <- NULL
hist123$DLY.TAVG.NORMAL[hist123$DLY.TAVG.NORMAL==-9999] <- NA
hist123 <- hist123[complete.cases(hist123),]
duplicate <- ddply(hist123, .(STATION), nrow)
in16 <- in15[which(in15$STATION %in% hist123$STATION),]

hist456 <- read.csv("Historical_456.csv")
hist456$STATION_NAME <- hist456$ELEVATION<- NULL
hist456$MTD.PRCP.NORMAL <- hist456$MTD.SNOW.NORMAL <- hist456$DLY.TAVG.STDDEV <- NULL
hist456$YTD.PRCP.NORMAL <- hist456$YTD.SNOW.NORMAL <- NULL
hist456$DLY.TAVG.NORMAL[hist456$DLY.TAVG.NORMAL==-9999] <- NA
hist456 <- hist456[complete.cases(hist456),]
duplicate <- ddply(hist456, .(STATION), nrow)
summary(duplicate)
in17 <- in16[which(in16$STATION %in% hist456$STATION),]

hist789 <- read.csv("Historical_789.csv")
hist789$STATION_NAME <- hist789$ELEVATION <- NULL
hist789$MTD.PRCP.NORMAL <- hist789$MTD.SNOW.NORMAL <- hist789$DLY.TAVG.STDDEV <- NULL
hist789$YTD.PRCP.NORMAL <- hist789$YTD.SNOW.NORMAL <- NULL
hist789$DLY.TAVG.NORMAL[hist789$DLY.TAVG.NORMAL==-9999] <- NA
hist789 <- hist789[complete.cases(hist789),]
duplicate <- ddply(hist789, .(STATION), nrow)
summary(duplicate)
in18 <- in17[which(in17$STATION %in% hist789$STATION),]

hist101112 <- read.csv("Historical_101112.csv")
hist101112$STATION_NAME <- hist101112$ELEVATION <- NULL
hist101112$MTD.PRCP.NORMAL <- hist101112$MTD.SNOW.NORMAL <- NULL
hist101112$YTD.PRCP.NORMAL <- hist101112$YTD.SNOW.NORMAL <- NULL

in19 <- in18[which(in18$STATION %in% hist101112$STATION),]
names(in19)[names(in19) == 'STATION'] <- 'Station'
write.csv(in19, "overlapstation_3.csv")
setwd("~/Dropbox/NOAAoriginal")
station <- read.csv("ghcdstation_geo.csv")

# match the stations with corresponding zipcode and find missing values

geo2 <- read.csv("ghcdstation_geo_2.csv")
again <- in19[which(in19$Station %in% geo2$Station),]
names(again)[names(again) == 'STATION'] <- 'Station'
again_merge <- merge(again, station, by="Station")
myvar <- c("Station", "zipcode")
again_merge <- again_merge[myvar]
write.csv(again_merge, "ghcdstation_geo_3.csv") # 1568station
setwd("~/Dropbox/NOAAagain/")
matching <- read.csv("~/Dropbox/NOAAoriginal/final_again/ghcdstation_wustlid_withoutna.csv")
missing <- matching[-which(matching$Station %in% again$Station),] # 1128 missing
write.csv(missing, "missingtaps.csv")
notmissing <- matching[which(matching$Station %in% again$Station),] # 681 not missing
write.csv(notmissing, "notmissingtaps.csv")
tapss <- read.csv("~/Dropbox/station/tapsgeowithoutna.csv")
mergemissing <- merge(missing,tapss, by="wustlid")
nrow(mergemissing)
write.csv(mergemissing, "missingtaps.csv")

# collect the zipcode for stations that have missing zipcode

setwd("~/Dropbox/NOAAagain/")
missing <- read.csv("missingtaps.csv")
table(missing$state)

> table(missing$state)

wy <- subset(missing, missing$state=="WY")
write.csv(wy, "wy.csv")

x <- read.csv("wy.csv")
y <- read.csv("station_a.csv")
nrow(y)
nrow(x)
z <- x[rep(seq_len(nrow(x)), each=35),]
w <- y[rep(seq_len(nrow(y)),2),]
v <- cbind(z,w)
test <- v
test$zipcode <- sprintf("%05s", test$zipcode)
test$zipcode.y <- sprintf("%05s", test$zipcode.y)
test$from <- as.character(test$zipcode)
test$to <- as.character(test$zipcode.y)
test$row.number <- 1:nrow(test)
for (i in test$row.number){
  orig <- test[i,c('from')] # get origin from DF in the position line 'i', column 'from'
  dest <- test[i,c('to')]   # get origin from DF in the position line 'i', column 'to'
  a <- georoute(c(orig, dest), verbose=TRUE, returntype="distance", service="bing") # create temp. df 'a' with the output from mapdist
  a$row.number <- i # include in temp. df 'a' the index number of the row from DF
  test$kilometer[match(a$row.number, test$row.number)] <- a$distance # ibdem
}
write.csv(test, "result_1.csv")

# combine the dataset
# for the stations that do not have matching zipcodes, find the zipcodes that have minimum distance from the station

i <- read.csv("result_1.csv")
myvar <- c("wustlid", "zipcode", "Station", "kilometer")
i <- i[myvar]
j <- read.csv("result_2.csv")
myvar <- c("wustlid", "zipcode", "Station", "kilometer")
j <- j[myvar]
k <- read.csv("result_3.csv")
myvar <- c("wustlid", "zipcode", "Station", "kilometer")
k <- k[myvar]
rbind <- rbind(i,j)
rbind <- rbind(i, j, k)
rbind <- i
rbind$miles <- rbind$kilometer * 0.62137
rbind <- rbind[order(rbind$wustlid, rbind$zipcode),]
library(plyr)
min <- ddply(rbind, .(wustlid), summarise, miles=min(miles), zipcode=zipcode[which.min(miles)], Station=Station[which.min(miles)])
nrow(min)
table(min$miles)
write.csv(min, "yeah50.csv")

# combine the data

setwd("~/Dropbox/NOAAagain/final")
temp1 <- read.csv("notmissingtaps.csv")
temp2 <- read.csv("yeah2.csv")
temp3 <- read.csv("yeah3.csv")
temp4 <- read.csv("yeah4.csv")
temp5 <- read.csv("yeah5.csv")
temp6 <- read.csv("yeah6.csv")
temp7 <- read.csv("yeah7.csv")
temp8 <- read.csv("yeah8.csv")
temp9 <- read.csv("yeah9.csv")
temp10 <- read.csv("yeah10.csv")
temp11 <- read.csv("yeah11.csv")
temp12 <- read.csv("yeah12.csv")
temp13 <- read.csv("yeah13.csv")
temp14 <- read.csv("yeah14.csv")
temp15 <- read.csv("yeah15.csv")
temp16 <- read.csv("yeah16.csv")
temp17 <- read.csv("yeah17.csv")
temp18 <- read.csv("yeah18.csv")
temp19 <- read.csv("yeah19.csv")
temp20 <- read.csv("yeah20.csv")
temp21 <- read.csv("yeah21.csv")
temp22 <- read.csv("yeah22.csv")
temp23 <- read.csv("yeah23.csv")
temp24 <- read.csv("yeah24.csv")
temp25 <- read.csv("yeah25.csv")
temp26 <- read.csv("yeah26.csv")
temp27 <- read.csv("yeah27.csv")
temp28 <- read.csv("yeah28.csv")
temp29 <- read.csv("yeah29.csv")
temp30 <- read.csv("yeah30.csv")
temp31 <- read.csv("yeah31.csv")
temp32 <- read.csv("yeah32.csv")
temp33 <- read.csv("yeah33.csv")
temp34 <- read.csv("yeah34.csv")
temp35 <- read.csv("yeah35.csv")
temp36 <- read.csv("yeah36.csv")
temp37 <- read.csv("yeah37.csv")
temp38 <- read.csv("yeah38.csv")
temp39 <- read.csv("yeah39.csv")
temp40 <- read.csv("yeah40.csv")
temp41 <- read.csv("yeah41.csv")
temp42 <- read.csv("yeah42.csv")
temp43 <- read.csv("yeah43.csv")
temp44 <- read.csv("yeah44.csv")
temp45 <- read.csv("yeah45.csv")
temp46 <- read.csv("yeah46.csv")
temp47 <- read.csv("yeah47.csv")
temp48 <- read.csv("yeah48.csv")
temp49 <- read.csv("yeah49.csv")
temp50 <- read.csv("yeah50.csv")

# combine the data and check the n

rbind <- rbind(temp1, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10,
               temp11, temp12, temp13, temp14, temp15, temp16, temp17, temp18, temp19,
               temp20, temp21, temp22, temp23, temp24, temp25, temp26, temp27, temp28,
               temp29, temp30, temp31, temp32, temp33, temp34, temp35, temp36, temp37,
               temp38, temp39, temp40, temp41, temp42, temp43, temp44, temp45, temp46, 
               temp47, temp48, temp49,temp50)
rbind <- rbind[order(rbind$wustlid, rbind$zipcode),]
rbind$wustlid <- unique(rbind$wustlid)
nrow(rbind)
write.csv(rbind, "ghcdstation_taps1126.csv")


missing2 <- matching[-which(matching$wustlid %in% rbind$wustlid),] # 8 missing
write.csv(missing2, "missing2.csv")

final <- read.csv("ghcdstation_taps1126.csv")
final$wustlid <- unique(final$wustlid)

final <- final[order(final$wustlid, final$zipcode, final$miles),]
min <- ddply(final, .(wustlid), summarise, miles=min(miles), zipcode=zipcode[which.min(miles)], Station=Station[which.min(miles)])
nrow(min)
table(min$miles)
# final product of station-zipcode matching process
write.csv(min, "ghcdstation_taps1126.csv")


id <- read.csv("ghcdstation_taps1126.csv")
names(id)[names(id) == 'Station'] <- 'STATION'

# load and clean the weather data

setwd("~/Dropbox/NOAAoriginal/datafile")

temp <- read.csv("Actual2013dec.csv")
merged16 <- merge(id, temp, by="STATION")
myvar <- c("wustlid", "zipcode", "DATE", "PRCP", "TMAX", "TMIN")
merged16 <- merged16[myvar]
write.csv(merged16, "merged16.csv")


ghcdmerged <- rbind(merged1, merged2, merged3, merged4, merged5, merged6, merged7,
                    merged8, merged9, merged10, merged11, merged12, merged13, merged14,
                    merged15, merged16)
ghcdmerged <- ghcdmerged[order(ghcdmerged$wustlid, ghcdmerged$DATE),]
write.csv(ghcdmerged,"ghcd_observed_weather1126.csv")
ghcdmerged$wustlid <- unique(ghcdmerged$wustlid)



temp <- read.csv("Historical_101112.csv")
hismerge4 <- merge(id, temp, by="STATION")
myvar <- c("wustlid", "DATE", "DLY.TAVG.NORMAL")
hismerge4 <- hismerge4[myvar]
write.csv(hismerge4, "hismerge4.csv")

hismerged <- rbind(hismerge1, hismerge2, hismerge3, hismerge4)
hismerged <- hismerged[order(hismerged$wustlid, hismerged$DATE),]
hismerged$X <- NULL
write.csv(hismerged,"ghcd_historical_weather1126.csv")

# sort by date

library(lubridate)
observed <- read.csv("ghcd_observed_weather1126.csv")
observed$wustlid <- unique(observed$wustlid)
observed$date <- observed$DATE
observed$date <- ymd(observed$date)
observed$month <- month(observed$date)
observed$day <- day(observed$date)


historical <- read.csv("ghcd_historical_weather1126.csv")
nrow(historical)
historical$date <- historical$DATE
historical$date <- ymd(historical$date)
historical$month <- month(historical$date)
historical$day <- day(historical$date)

# merge historical and observed weather data by date

ghcd <- merge(observed, historical, by=c("wustlid", "month", "day"))
ghcd$wustlid <- unique(ghcd$wustlid)
ghcd<- ghcd[order(ghcd$wustlid, ghcd$DATE.x),]
myvar <- c("wustlid", "DATE.x", "PRCP", "TMAX", "TMIN", "DLY.TAVG.NORMAL")
ghcd <- ghcd[myvar]
names(ghcd)[names(ghcd) == 'DATE.x'] <- 'Date'
write.csv(ghcd, "ghcd1126.csv")

historical <- read.csv("~/Dropbox/TAPS_Climate/Data/NOAA/historical_complete_long.csv")
unique(historical$wustlid)
historical$date <- historical$Date
historical$date <- ymd(historical$date)
historical$month <- month(historical$date)
historical$day <- day(historical$date)
head(historical)
myvar <- c("wustlid", "month", "day", "DLY.PRCP.NORMAL")
historical <- historical[myvar]


observed <- read.csv("ghcd1126.csv")
observed$date <- observed$Date
observed$date <- ymd(observed$date)
observed$month <- month(observed$date)
observed$day <- day(observed$date)
head(observed)

mergedall <- merge(observed, historical, by=c("wustlid", "month", "day"))
head(mergedall)
myvar <- c("wustlid", "Date", "DLY.PRCP.NORMAL", "PRCP","TMAX", "TMIN", "DLY.TAVG.NORMAL")
mergedall <- mergedall[myvar]
mergedall <- mergedall[order(mergedall$wustlid, mergedall$Date),]
mergedall$X <- NULL
write.csv(mergedall, "allmerged1126.csv")

# trasnform the units of the weather data

merged <- read.csv("allmerged1126.csv")
unique(merged$wustlid)
merged$TAVG = (merged$TMAX + merged$TMIN)/2
merged$TMAX <- merged$TMIN <- NULL
merged$X <- NULL
summary(merged)
head(merged)

merged$TAVG <- merged$TAVG / 10
merged$DLY.TAVG.NORMAL <- merged$DLY.TAVG.NORMAL / 10
merged$TAVG <- (merged$TAVG *9/5) +32

merged$PRCP <- merged$PRCP /10
merged$PRCP <- merged$PRCP *3.93701

write.csv(merged, "taps_weather_data1126.csv")
unique(merged$wustlid)

# summary shows 1) there is no missing values 2) all the observed and historical weather data has been matched with corresponding wustlid

> summary(duplicate)
wustlid              V1     
Min.   : 989871   Min.   :487  
1st Qu.: 994599   1st Qu.:487  
Median :1002768   Median :487  
Mean   :1020089   Mean   :487  
3rd Qu.:1053298   3rd Qu.:487  
Max.   :1115273   Max.   :487  

